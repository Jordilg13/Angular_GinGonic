steps:
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'pull'
      - '$_REPO/$PROJECT_ID/$_PROJECT:latest'
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--cache-from'
      - '$_REPO/$PROJECT_ID/$_PROJECT:latest'
      - '.'
      - '-f'
      - 'Dockerfile'
      - '-t'
      - '$_REPO/$PROJECT_ID/$_PROJECT:$SHORT_SHA'
      - '-t'
      - '$_REPO/$PROJECT_ID/$_PROJECT:latest'
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '$_REPO/$PROJECT_ID/$_PROJECT:$SHORT_SHA'
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '$_REPO/$PROJECT_ID/$_PROJECT:latest'
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
    - '-c'
    - |
      gcloud components install kubectl
      gcloud container clusters get-credentials $_CLUSTER --zone $_ZONE
      kubectl set image deployment $_PROJECT $_PROJECT=$_REPO/$PROJECT_ID/$_PROJECT:$SHORT_SHA --namespace=$_NAMESPACE --record
      kubectl rollout status deployment $_PROJECT --namespace=$_NAMESPACE
substitutions:
  _PROJECT: golang-gin
  _REPO: gcr.io
  _ZONE: us-central1-a
  _CLUSTER: standard-cluster-1
  _NAMESPACE: default
